/*!*********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/index.scss ***!
  \*********************************************************************************************************/
/* generals */
:root {
  --bg-primary: #f1f3f5;
  --bg-secundary: #f8f9fa;
  --text: #343a40;
  --text-accent: #f59f00;
  --border: 3px solid #343a40;
  --box-shadow: rgba(100,100,111,0.2) 0px 7px 29px 0px;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  color: var(--text);
  min-width: 30rem;
  background-color: var(--bg-primary);
  font-family: "Poppins", sans-serif;
  font-size: 1.6rem;
}

body.dark {
  --bg-primary: #343a40;
  --bg-secundary: #212529;
  --text: #adb5bd;
  --text-accent: #f08c00;
  --border: 3px solid#f1f3f5;
  --box-shadow: rgb(100,100,111) 0px 7px 29px 0px;
}

ul {
  list-style-type: none;
}
ul li {
  list-style: none;
}
ul li a {
  text-decoration: none;
}

h1 {
  font-size: 3rem;
  margin-bottom: 4rem;
}

h1, h2, h3, h4, h5, h6 {
  text-align: center;
  line-height: 1.2;
}

h1 {
  font-size: 3.4rem;
}

@media screen and (min-width: 45em) {
  body {
    font-size: 1.6rem;
  }

  .main {
    max-width: 110rem;
    width: 95%;
    margin: 0 auto;
  }
}
.section--title {
  font-weight: 700;
  font-size: 3.4rem;
}

.sub__section--title {
  font-weight: 600;
  font-size: 2.4rem;
}

.item {
  color: var(--text);
  display: inline-block;
  padding: 1rem 1.5rem;
  letter-spacing: 3px;
  text-align: center;
  position: relative;
  transition: color 0.7s;
  box-shadow: var(--box-shadow);
}
.item:hover {
  color: var(--bg-primary);
}
.item::before, .item::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--text);
  transition: transform 0.7s;
  z-index: -1;
}
.item::before {
  transform: rotateX(90deg);
}
.item::after {
  transform: rotateY(90deg);
}
.item:hover::before {
  transform: rotateX(0);
}
.item:hover::after {
  transform: rotateY(0);
}

.btn {
  background: none;
  font-weight: 500;
  position: relative;
  padding: 1.5rem 3rem;
  color: var(--text-accent);
  letter-spacing: 3px;
  border: 3px solid var(--text-accent);
  text-transform: uppercase;
  overflow: hidden;
  transition: color 0.3s;
  cursor: pointer;
}
.btn::before {
  content: "";
  position: absolute;
  background-color: var(--text-accent);
  top: -200%;
  left: 0;
  width: 100%;
  height: 200%;
  border-radius: 0 0 50% 50%;
  transition: top 0.3s;
  z-index: -1;
}
.btn:hover {
  color: var(--bg-primary);
}
.btn:hover::before {
  top: 0;
}

.back__top {
  width: 3rem;
  height: 3rem;
  position: fixed;
  cursor: pointer;
  top: 10%;
  left: 5rem;
  justify-content: center;
  box-shadow: 0 0 3px 1px;
  background-color: var(--bg-primary);
  border-radius: 50%;
}

@media screen and (min-width: 40em) {
  .back__top {
    width: 4rem;
    height: 4rem;
    top: 50%;
    left: calc(100vw - 10rem);
  }
}
.section {
  max-width: 100rem;
  margin: 0 auto;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

/* flex container */
.flx__ctn {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/* margins */
.mb {
  margin-bottom: 2rem;
}

.mb-md {
  margin-bottom: 3rem;
}

.mb-bg {
  margin-bottom: 4rem;
}

.ml {
  margin-left: 1rem;
}

.box__shadow {
  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

.box__shadow-sm {
  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.4);
}

.center {
  margin: 0 auto;
}

.hdr {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 1.6rem;
  height: 12rem;
  justify-content: center;
}
.hdr--logo {
  font-weight: 700;
  font-size: 3.4rem;
  color: var(--text-accent);
}
.hdr--logo:hover {
  cursor: pointer;
  color: var(--text);
}

.nv {
  display: flex;
  align-items: center;
  gap: 1rem;
  justify-content: space-between;
  position: relative;
  width: 90%;
  font-weight: 500;
}
.nv--item > a {
  color: var(--text);
}
.nv--md {
  background-color: var(--bg-secundary);
  justify-content: center;
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: -110%;
  flex-direction: column;
  transition: left 250ms;
  z-index: 10000;
}
.nv--md.open {
  left: 0;
}
.nv--md * {
  margin-bottom: 2rem;
}
.nv--dd {
  display: none;
}
.nv--opt {
  display: flex;
  align-items: center;
  gap: 1rem;
}
.nv--opt > * {
  cursor: pointer;
}
.nv--lg {
  font-size: 2.8rem;
  font-weight: 700;
}

.close--icon {
  position: absolute;
  top: 5rem;
  right: 5rem;
}

@media screen and (min-width: 40em) {
  .hdr {
    height: 8rem;
  }

  .nv {
    max-width: 110rem;
  }
  .nv--item {
    margin-left: 1.5rem;
    position: relative;
    padding: 0.2em 0;
  }
  .nv--item:hover {
    cursor: pointer;
  }
  .nv--item:active {
    color: var(--text-accent);
  }
  .nv--item::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--text-accent);
    transform: scaleX(0);
    transform-origin: left;
    transition: 0.2s;
  }
  .nv--item:hover::before {
    transform: scaleX(1);
  }
  .nv--ul {
    background-color: none;
    position: block;
    width: 80%;
    height: 100vh;
    justify-content: space-between;
  }
  .nv--md {
    display: none;
  }
  .nv--dd {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .menu--icon {
    display: none;
  }
}
.name {
  color: var(--text-accent);
}

#presentation {
  height: calc(100vh - 12rem);
}

.presentation__ctr {
  font-family: "Azeret Mono";
  margin: 0 auto;
  width: min(95vw, 40rem);
  height: 30rem;
  background-color: var(--bg-secundary);
  border-radius: 2rem;
  padding: 1rem;
}

.command {
  position: relative;
  width: max-content;
  font-weight: 400;
}

.ter-header {
  justify-content: start;
  border-bottom: var(--border);
}

.th-1 {
  color: red;
}

.th-2 {
  color: yellow;
}

.th-3 {
  color: green;
}

/* Animation */
.cm-1::before,
.cm-1::after,
.cm-2::before,
.cm-2::after,
.cm-3::before,
.cm-3::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

.cm-1::after,
.cm-2::after,
.cm-3::after {
  width: 1ch;
  height: 100%;
}

.cm-1::before {
  background-color: var(--bg-secundary);
  animation: typewriter 1.5s steps(25) forwards;
}

.cm-1::after {
  animation: typewriter 1.5s steps(25) forwards, disapear 1.5s forwards;
}

.cm-2::before {
  background-color: var(--bg-secundary);
  animation: typewriter 1.5s steps(25) forwards 1.5s;
}

.cm-2::after {
  animation: typewriter 1.5s steps(25) forwards 1.5s, disapear 1.5s forwards 1.5s;
}

.cm-3::before {
  background-color: var(--bg-secundary);
  animation: typewriter 300ms steps(30) forwards 3s;
}

.cm-3::after {
  animation: typewriter 300ms steps(30) forwards 3s, disapearh2 300ms forwards 3s, stayblink 750ms infinite 3s;
}

@keyframes typewriter {
  to {
    left: 103%;
  }
}
@keyframes disapear {
  0% {
    background-color: var(--text);
  }
  99% {
    background-color: var(--text);
  }
  100% {
    background-color: transparent;
  }
}
@keyframes disapearh2 {
  0% {
    background-color: transparent;
  }
  1% {
    background-color: var(--text);
  }
  100% {
    background-color: var(--text);
  }
}
@keyframes disapearh2 {
  0% {
    background-color: transparent;
  }
  1% {
    background-color: var(--text);
  }
  100% {
    background-color: var(--text);
  }
}
@keyframes stayblink {
  to {
    background-color: transparent;
  }
}
@media screen and (min-width: 40em) {
  .presentation__ctr {
    width: 65rem;
  }
}
/* Projects Section */
.pr__content {
  display: grid;
  grid-gap: 3rem;
  align-items: center;
  justify-content: center;
}
.pr__card {
  margin: 0 auto;
  width: 28rem;
  height: 28rem;
  padding: 2rem;
  text-align: center;
}
.pr__card--links {
  margin: 0 auto;
  width: 50%;
  justify-content: space-evenly;
}

@media screen and (min-width: 40em) {
  .pr__content {
    grid-template-columns: repeat(2, 1fr);
  }
  .pr__card {
    margin: 0 auto;
    width: 28rem;
    height: 28rem;
    padding: 2rem;
    text-align: center;
    position: relative;
    overflow: hidden;
    transition: color 0.5s;
  }
  .pr__card::before {
    content: "";
    position: absolute;
    top: 97%;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--text);
    transition: top 0.5s;
    z-index: -1;
  }
  .pr__card:hover::before {
    top: 0;
  }
  .pr__card:hover {
    color: var(--bg-primary);
  }
  .pr__card--links > * {
    cursor: pointer;
  }
}
@media screen and (min-width: 62.5em) {
  .pr__content {
    grid-template-columns: repeat(3, 1fr);
  }
}
.section--content {
  margin: 0 auto;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  display: flex;
  flex-wrap: wrap;
  width: min(100%, 50rem);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/